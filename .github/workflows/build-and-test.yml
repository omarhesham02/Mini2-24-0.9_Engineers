name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  actions: write
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: Start PostgreSQL and MongoDB containers
        run: docker compose up -d postgres mongodb

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL..."
          until docker exec postgres pg_isready -U root -d postgres_db; do sleep 1; done
          echo "PostgreSQL is ready!"

      - name: Wait for MongoDB to be ready
        run: |
          echo "Waiting for MongoDB..."
          until nc -z localhost 27017; do sleep 1; done
          echo "MongoDB is ready!"

      - name: Start App Locally in Background
        run: |
          echo "Starting the app in background..."
          nohup mvn spring-boot:run > app.log 2>&1 &

      - name: Wait for App to be ready
        run: |
          echo "Waiting for App..."
          until curl --fail http://localhost:8080/health || curl --fail http://localhost:8080; do sleep 1; done
          echo "App is ready!"

      - name: Build (without tests)
        run: mvn install -DskipTests


  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: Start PostgreSQL and MongoDB containers
        run: docker compose up -d postgres mongodb

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL..."
          until docker exec postgres pg_isready -U root -d postgres_db; do sleep 1; done
          echo "PostgreSQL is ready!"

      - name: Wait for MongoDB to be ready
        run: |
          echo "Waiting for MongoDB..."
          until nc -z localhost 27017; do sleep 1; done
          echo "MongoDB is ready!"

      - name: Start App Locally in Background
        run: |
          echo "Starting the app in background..."
          nohup mvn spring-boot:run > app.log 2>&1 &

      - name: Wait for App to be ready
        run: |
          echo "Waiting for App..."
          until curl --fail http://localhost:8080/health || curl --fail http://localhost:8080; do sleep 1; done
          echo "App is ready!"

      - name: Run Tests
        run: mvn test

      - name: Publish Test Results
        if: always()
        uses: dorny/test-reporter@v2
        with:
          name: Test Results
          path: 'target/surefire-reports/TEST-*.xml'
          reporter: java-junit
